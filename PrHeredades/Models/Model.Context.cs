//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrHeredades.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbHeredadesEntities : DbContext
    {
        public dbHeredadesEntities()
            : base("name=dbHeredadesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbCaja> tbCaja { get; set; }
        public virtual DbSet<tbCategoria> tbCategoria { get; set; }
        public virtual DbSet<tbDeudor> tbDeudor { get; set; }
        public virtual DbSet<tbPagoDeudor> tbPagoDeudor { get; set; }
        public virtual DbSet<tbPagoProveedor> tbPagoProveedor { get; set; }
        public virtual DbSet<tbPermiso> tbPermiso { get; set; }
        public virtual DbSet<tbPresentacion> tbPresentacion { get; set; }
        public virtual DbSet<tbProducto> tbProducto { get; set; }
        public virtual DbSet<tbProductoProveedor> tbProductoProveedor { get; set; }
        public virtual DbSet<tbProductoTransaccion> tbProductoTransaccion { get; set; }
        public virtual DbSet<tbProveedor> tbProveedor { get; set; }
        public virtual DbSet<tbRol> tbRol { get; set; }
        public virtual DbSet<tbRolPermiso> tbRolPermiso { get; set; }
        public virtual DbSet<tbTransaccion> tbTransaccion { get; set; }
        public virtual DbSet<tbTransaccionCaja> tbTransaccionCaja { get; set; }
        public virtual DbSet<tbUsuario> tbUsuario { get; set; }
        public virtual DbSet<tbVenta> tbVenta { get; set; }
        public virtual DbSet<tbVentaProducto> tbVentaProducto { get; set; }
        public virtual DbSet<tbProductoPresentacion> tbProductoPresentacion { get; set; }
    
        [DbFunction("dbHeredadesEntities", "resumenComprasDia")]
        public virtual IQueryable<resumenComprasDia_Result> resumenComprasDia(Nullable<System.DateTime> dia)
        {
            var diaParameter = dia.HasValue ?
                new ObjectParameter("dia", dia) :
                new ObjectParameter("dia", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<resumenComprasDia_Result>("[dbHeredadesEntities].[resumenComprasDia](@dia)", diaParameter);
        }
    
        [DbFunction("dbHeredadesEntities", "resumenMovimientosCaja")]
        public virtual IQueryable<resumenMovimientosCaja_Result> resumenMovimientosCaja(Nullable<System.DateTime> dia)
        {
            var diaParameter = dia.HasValue ?
                new ObjectParameter("dia", dia) :
                new ObjectParameter("dia", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<resumenMovimientosCaja_Result>("[dbHeredadesEntities].[resumenMovimientosCaja](@dia)", diaParameter);
        }
    
        [DbFunction("dbHeredadesEntities", "resumenVentasDia")]
        public virtual IQueryable<resumenVentasDia_Result> resumenVentasDia(Nullable<System.DateTime> dia)
        {
            var diaParameter = dia.HasValue ?
                new ObjectParameter("dia", dia) :
                new ObjectParameter("dia", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<resumenVentasDia_Result>("[dbHeredadesEntities].[resumenVentasDia](@dia)", diaParameter);
        }
    
        public virtual int DeshabilitarProductos(Nullable<int> codProd, Nullable<int> codPres)
        {
            var codProdParameter = codProd.HasValue ?
                new ObjectParameter("codProd", codProd) :
                new ObjectParameter("codProd", typeof(int));
    
            var codPresParameter = codPres.HasValue ?
                new ObjectParameter("codPres", codPres) :
                new ObjectParameter("codPres", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeshabilitarProductos", codProdParameter, codPresParameter);
        }
    }
}
