@model PrHeredades.Models.tbProducto

@{
    ViewBag.Title = "Crear";
}

<form id="formProducto">
    <h2>Crear producto </h2>
    <hr />
    <h4>
        <div class="validation-summary-errors text-danger">
            <ul id="error">
                <!-- escribe el error de existencia -->
            </ul>
        </div>
    </h4>
    <div class="form-group">
        <label for="producto" class="col-form-label">Producto</label>
        @Html.TextBoxFor(t => t.producto, new { @class = "form-control col-md-4", autocomplete = "off", maxlength = "50" })
    </div>

    <div class="form-group">
        <label for="codCategoria" class="col-form-label">Categoría</label>
        @Html.DropDownListFor(m => m.codCategoria, null, "Elija una categoría", htmlAttributes: new { @class = "form-control col-md-4" })
    </div>
</form>

<div class="form-group">
    <label class="col-form-label">Presentaciones</label>
    <div id="presentaciones">

    </div>
    <button type="button" class="btn btn-success btn-sm" onclick="ModalPresentacion()">
        <span class="fa fa-plus"></span> Agregar presentación
    </button>
</div>

<div class="form-group col-md-4 text-center" style="padding-left:0; padding-right:0">
    <button type="submit" class="btn btn-primary" style="width: 150px" onclick="CrearProducto()">
        <span class="fa fa-check"></span> Crear
    </button>
    <a href="@Url.Action("Index")" class="btn btn-danger" style="width: 150px">
        <span class="fa fa-times"></span> Cancelar
    </a>
</div>


<!-- Modal Agregar Presentación -->
<div class="modal fade" id="pedirPresentacion" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Presentación</h5>
            </div>

            <div class="modal-body">
                <form id="agrPresentacion">
                    <div class="form-group">
                        <label for="codPresentacion" class="col-form-label">Presentación</label>
                        @Html.DropDownList("codPresentacion", null, "Elija una presentación", htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label for="precioVentaMinimo" class="col-form-label">Precio de venta mínimo</label>
                        @Html.TextBox("precioVentaMinimo", "", new { @class = "form-control", autocomplete = "off" })
                    </div>
                    <div class="form-group">
                        <label for="precioVentaMedio" class="col-form-label">Precio de venta medio</label>
                        @Html.TextBox("precioVentaMedio", "", new { @class = "form-control", autocomplete = "off" })
                    </div>
                    <div class="form-group">
                        <label for="precioVentaMaximo" class="col-form-label">Precio de venta máximo</label>
                        @Html.TextBox("precioVentaMaximo", "", new { @class = "form-control", autocomplete = "off" })
                    </div>
                    <div class="form-group">
                        <label for="agregado" class="col-form-label">Agregado a deuda</label>
                        @Html.TextBox("agregado", "", new { @class = "form-control", autocomplete = "off" })
                    </div>
                    <div class="form-group" id="divUnidades">
                        <label for="unidades" id="lblUnidades" class="col-form-label">Se divide en</label>
                        @Html.TextBox("unidades", "", new { @class = "form-control", autocomplete = "off", placeholder = "Número de unidades en que se divide" })
                    </div>
                    <div class="form-group">
                        <label for="existencia" class="col-form-label">Existencia inicial</label>
                        @Html.TextBox("existencia", "", new { @class = "form-control", autocomplete = "off" })
                    </div>
                </form>

                <div class="form-group text-center">
                    <button type="button" class="btn btn-primary" onclick="AgregarPresentacion()" style="width: 150px">
                        <span class="fa fa-plus"></span> Agregar
                    </button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal" style="width: 150px">
                        <span class="fa fa-times"></span> Cancelar
                    </button>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Modal Editar Presentación -->
<div class="modal fade" id="editarPresentacion" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Presentación</h5>
            </div>
            <div class="modal-body">
                <form id="editPresentacion">
                    <div class="form-group">
                        <label for="presentacion" class="col-form-label">Presentación</label>
                        @Html.TextBox("presentacion", "", new { @class = "form-control", autocomplete = "off", @readonly = "readonly" })
                    </div>
                    <div class="form-group">
                        <label for="editPrecioVentaMinimo" class="col-form-label">Precio de venta mínimo</label>
                        @Html.TextBox("editPrecioVentaMinimo", "", new { @class = "form-control", autocomplete = "off" })
                    </div>
                    <div class="form-group">
                        <label for="editPrecioVentaMedio" class="col-form-label">Precio de venta medio</label>
                        @Html.TextBox("editPrecioVentaMedio", "", new { @class = "form-control", autocomplete = "off" })
                    </div>
                    <div class="form-group">
                        <label for="editPrecioVentaMaximo" class="col-form-label">Precio de venta máximo</label>
                        @Html.TextBox("editPrecioVentaMaximo", "", new { @class = "form-control", autocomplete = "off" })
                    </div>
                    <div class="form-group">
                        <label for="editAgregado" class="col-form-label">Agregado a deuda</label>
                        @Html.TextBox("editAgregado", "", new { @class = "form-control", autocomplete = "off" })
                    </div>
                    <div class="form-group" id="editDivUnidades">
                        <label for="editUnidades" id="editLblUnidades" class="col-form-label">Se divide en</label>
                        @Html.TextBox("editUnidades", "", new { @class = "form-control", autocomplete = "off", placeholder = "Número de unidades" })
                    </div>
                    <div class="form-group">
                        <label for="editExistencia" class="col-form-label">Existencia inicial</label>
                        @Html.TextBox("editExistencia", "", new { @class = "form-control", autocomplete = "off" })
                    </div>
                </form>
                <div class="form-group text-center">
                    <button type="button" class="btn btn-primary" onclick="confirmarEdicion()" style="width: 150px">
                        <span class="fa fa-save"></span> Guardar
                    </button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal" style="width: 150px">
                        <span class="fa fa-times"></span> Cancelar
                    </button>
                </div>
            </div>

        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jqueryValidator/producto.js"></script>
    <script src="~/Scripts/jqueryValidator/productoPresentacion.js"></script>

    <script>
        var presentaciones = [];
        var editar;
        var lstPresentaciones = @Html.Raw(Json.Encode(@ViewBag.presentaciones));

        function AgregarPresentacion() {
            if ($("#agrPresentacion").valid()) {
                $('#pedirPresentacion').modal('hide');
                Agregar();
                $('#agrPresentacion').trigger("reset");
            }
        }

        function Agregar() {
            presentaciones.push({
                codProducto: 0,
                codPresentacion: $('#codPresentacion').val(),
                precioVentaMinimo: $('#precioVentaMinimo').val(),
                precioVentaMedio: $('#precioVentaMedio').val(),
                precioVentaMaximo: $('#precioVentaMaximo').val(),
                agregado: $('#agregado').val(),
                unidades: $('#unidades').val(),
                existencia: $('#existencia').val()
            });
            ListarPresentaciones();
            $("#codPresentacion option:selected").remove();
        }

        function ModalPresentacion() {
            if (presentaciones.length < 1) {
                $('#divUnidades').hide();
                $('#unidades').val("1");
            } else {
                $('#divUnidades').show();
                var codPresentacion = presentaciones[presentaciones.length - 1].codPresentacion;
                var index = lstPresentaciones.findIndex(function (element) { return element.codPresentacion == codPresentacion })
                var nombrePres = lstPresentaciones[index].presentacion;
                if (nombrePres.toUpperCase() == "UNIDAD") {
                    nombrePres = "Unidades"
                } else {
                    nombrePres += "s";
                }
                $('#lblUnidades').text("En cuantas \"" + nombrePres + "\" se divide");
                $('#unidades').val("");
            }
            $('#agregado').val("0");
            $('#pedirPresentacion').modal('show');
        }

        function Editar(codPresentacion, presentacion) {
            var index = presentaciones.findIndex(function (element) { return element.codPresentacion == codPresentacion })
            editar = presentaciones[index];
            if (index == 0) {
                $('#editDivUnidades').hide();
            } else {
                $('#editDivUnidades').show();
                var codPresentacion = presentaciones[index - 1].codPresentacion;
                var index = lstPresentaciones.findIndex(function (element) { return element.codPresentacion == codPresentacion })
                var nombrePres = lstPresentaciones[index].presentacion;
                if (nombrePres.toUpperCase() == "UNIDAD") {
                    nombrePres = "Unidades"
                } else {
                    nombrePres += "s";
                }
                $('#editLblUnidades').text("En cuantas \"" + nombrePres + "\" se divide");
            }
            $('#presentacion').val(presentacion);
            $('#editPrecioVentaMinimo').val(editar.precioVentaMinimo);
            $('#editPrecioVentaMedio').val(editar.precioVentaMedio);
            $('#editPrecioVentaMaximo').val(editar.precioVentaMaximo);
            $('#editAgregado').val(editar.agregado);
            $('#editUnidades').val(editar.unidades);
            $('#editExistencia').val(editar.existencia);

            $('#editarPresentacion').modal('show');
        }
        
        function confirmarEdicion() {
            if ($("#editPresentacion").valid()) {
                editar.precioVentaMinimo = $('#editPrecioVentaMinimo').val();
                editar.precioVentaMedio = $('#editPrecioVentaMedio').val();
                editar.precioVentaMaximo = $('#editPrecioVentaMaximo').val();
                editar.agregado = $('#editAgregado').val();
                editar.unidades = $('#editUnidades').val();
                editar.existencia = $('#editExistencia').val();
                $('#editarPresentacion').modal('hide');
                $('#editPresentacion').trigger("reset");
                ListarPresentaciones();
            }
        }

        function Quitar(codPresentacion, presentacion) {
            $("#codPresentacion").append('<option value="' + codPresentacion + '">' + presentacion + '</option>');
            presentaciones.pop();
            ListarPresentaciones();
        }

        //Este es el método encargado de finalizar la creación del nuevo producto
        function CrearProducto() {
            var producto = {
                producto: $('#producto').val(),
                codCategoria: $('#codCategoria').val()
            };
            var modelo = {
                producto: producto,
                presentaciones: presentaciones
            };
            if ($("#formProducto").valid()) {
                $.ajax({
                    url: '@Url.Action("Guardar")',
                    type: "POST",
                    data: { modelo: modelo },
                    success: function (response) {
                        switch (parseInt(response)) {
                            case 1:
                                window.location.href = "@Url.Action("Index")";
                                break;
                            case 2:
                                //mostrar error de existencia
                                $('#error').html("<li>¡Este producto ya existe!</li>");
                                break;
                            case 3:
                                $('#error').html("<li>¡Debe agregar al menos una presentación!</li>");
                                break;
                        };
                    },
                    error: function (responser) {
                        alert("error");
                    }
                });
            }
        }

        function ListarPresentaciones() {
            $.ajax({
                url: '@Url.Action("Presentaciones")',
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(presentaciones),
                success: function (response) {
                    $('#presentaciones').html(response);
                },
                error: function (response) {
                    alert("fallido");
                }
            });
        }
    </script>
}
