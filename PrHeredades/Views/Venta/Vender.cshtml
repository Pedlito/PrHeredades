@model PrHeredades.Models.tbTransaccion

@{
    ViewBag.Title = "Vender";
}

<h2>Vender</h2>
<hr />
<div class="form-group">
    
    <h4>
        <div class="validation-summary-errors text-danger">
            <ul id="error">
                <!-- escribe el error de existencia -->
            </ul>
        </div>
    </h4>
    <div id="productos">

    </div>
    <button type="button" class="btn btn-success btn-sm" data-toggle="modal" data-target="#agregarProducto">
        <span class="fa fa-plus"></span> Agregar producto
    </button>
</div>
<hr />

<div class="form-group col-md-6 text-center" style="padding-left:0; padding-right:0">
    <button type="button" class="btn btn-primary" style="width: 150px" onclick="Vender(null)">
        <span class="fa fa-check"></span> Venta Contado
    </button>
    <button type="button" class="btn btn-warning" style="width: 150px" data-toggle="modal" data-target="#clientes">
        <span class="fa fa-user-circle"></span> Venta Crédito
    </button>
    <a href="@Url.Action("Index")" class="btn btn-danger" style="width: 150px">
        <span class="fa fa-times"></span> Cancelar
    </a>
</div>

<!-- Modal Agregar Productos -->
<div class="modal fade" id="agregarProducto" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Producto</h5>
            </div>

            <div class="modal-body">
                <form id="agrProducto">
                    <div class="form-group">
                        <label for="codProducto" class="col-form-label">Producto</label>
                        @Html.DropDownList("codProducto", null, "Elija un producto", htmlAttributes: new { @class = "form-control", onchange = "CargarPresentaciones(this.value)" })
                    </div>

                    <div class="form-group">
                        <label for="codPresentacion" class="col-form-label">Presentación</label>
                        @Html.DropDownList("codPresentacion", null, null, htmlAttributes: new { @class = "form-control" })
                    </div>

                    <div class="form-group text-center">
                        <button type="button" class="btn btn-primary" onclick="AgregarProducto()" style="width: 150px">
                            <span class="fa fa-plus"></span> Agregar
                        </button>
                        <button type="button" class="btn btn-danger" data-dismiss="modal" style="width: 150px" onclick="ResetearFormulario()">
                            <span class="fa fa-times"></span> Cancelar
                        </button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

<!-- Modal para asignar deudor-->
<div class="modal fade" id="clientes" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Seleccionar cliente</h5>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-md-5">
                        <input type="text" placeholder="Nombre" class="form-control form-control-sm" id="filtro" name="filtro" autocomplete="off" />
                    </div>
                    <button type="button" class="btn btn-info btn-sm" onclick="FiltrarClientes()">
                        <span class="fa fa-search"></span> Filtrar
                    </button>
                </div>
                <br />
                <div id="listaClientes">

                </div>

                <div class="text-right">
                    <button type="button" class="btn btn-success" style="width: 150px" data-dismiss="modal" data-toggle="modal" data-target="#nuevoCliente">
                        <span class="fa fa-user"></span> Nuevo Cliente
                    </button>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Modal para crear cliente -->
<div class="modal fade" id="nuevoCliente" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Crear un nuevo cliente</h5>
            </div>

            <div class="modal-body">
                <form id="formDeudor">
                    <h4>@Html.ValidationSummary(true, "", new { @class = "text-danger" })</h4>

                    <div class="form-group">
                        <label for="nombre" class="col-form-label">Nombre</label>
                        @Html.TextBox("nombre", null, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                    </div>

                    <div class="form-group">
                        <label for="telefono" class="col-form-label">Télefono</label>
                        @Html.TextBox("telefono", null, new { @class = "form-control", autocomplete = "off", maxlength = "15" })
                    </div>

                    <div class="form-group">
                        <label for="residencia" class="col-form-label">Residencia</label>
                        @Html.TextBox("residencia", null, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                    </div>

                    <div class="form-group">
                        <label for="refUno" class="col-form-label">Referencia uno</label>
                        @Html.TextBox("refUno", null, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                    </div>

                    <div class="form-group">
                        <label for="refDos" class="col-form-label">Referencia dos</label>
                        @Html.TextBox("refDos", null, new { @class = "form-control", autocomplete = "off", maxlength = "50" })
                    </div>

                    <div class="form-group text-center" style="padding-left:0; padding-right:0">
                        <button type="button" class="btn btn-primary" onclick="CrearDeudor()" style="width: 150px">
                            <span class="fa fa-check"></span> Crear y vender
                        </button>
                        <button type="button" class="btn btn-danger" data-dismiss="modal" style="width: 150px" onclick="ResetearFormulario()">
                            <span class="fa fa-times"></span> Cancelar
                        </button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jqueryValidator/productoProveedor.js"></script>
    <script src="~/Scripts/jqueryValidator/deudor.js"></script>
    <script>
        var productos = [];
        var editar;

        function CargarPresentaciones(codProducto) {
            $('#codPresentacion').empty();
            if (codProducto > 0) {
                $.ajax({
                    url: '@Url.Action("CargarPresentaciones")',
                    type: "POST",
                    data: { codProducto: codProducto },
                    success: function (response) {
                        var usados = 0;
                        response.forEach(function (item) {
                            var codProducto = $('#codProducto').val();
                            if (!Contiene(codProducto, item.codPresentacion)) {
                                usados++;
                                var option = $(document.createElement('option'));
                                option.val(item.codPresentacion);
                                option.text(item.presentacion);
                                $("#codPresentacion").append(option);
                            }
                        });
                        if (usados == 0) {
                            var option = $(document.createElement('option'));
                            option.val("");
                            option.text("No hay mas presentaciones");
                            $("#codPresentacion").append(option);
                        }
                    },
                    error: function (msg) {
                        console.log(msg);
                    }
                });
            }
        }

        //Este es el método encargado de finalizar todo el proceso para una venta al contado
        function Vender(codDeudor) {
            if (productos.length > 0) {
                $.ajax({
                    url: '@Url.Action("Vender")',
                    type: "POST",
                    data: { lista: productos, codDeudor: codDeudor },
                    success: function (response) {
                        switch (parseInt(response)) {
                            case 1:
                                window.location.href = "@Url.Action("Index")";
                                break;
                            default:
                                $('#error').html("<li>¡Error al ingresar datos!</li>");
                        };
                    },
                    error: function (response) {
                        console.log(response);
                    }
                });
            }
            else {
                // no hay productos
                // console.log("hola");
                $('#error').html("<li>¡Debe agregar al menos un producto!</li>");
                $('#clientes').modal('hide');
            }
        }

        function AgregarProducto() {
            if ($("#agrProducto").valid()) {
                $('#agregarProducto').modal('hide');
                Agregar();
                $('#agrProducto').trigger("reset");
                $('#codPresentacion').empty();
                $('#error').empty();
            }
        }

        function CambiarCantidad(codProducto, codPresentacion, cantidad) {
            var index = productos.findIndex(t => t.codProducto == codProducto && t.codPresentacion == codPresentacion);
            if (cantidad.value != "" && cantidad.value > 0) {
                productos[index].cantidad = cantidad.value;
                ListarProductos();
            }
            else {
                productos[index].cantidad = "1";
                $(cantidad).val(1);
            }

        }

        function Quitar(codProducto, codPresentacion) {
            var index = productos.findIndex(t => t.codProducto == codProducto && t.codPresentacion == codPresentacion);
            if (index > -1) {
                productos.splice(index, 1);
                ListarProductos();
            }
        }

        function Agregar() {
            productos.push({
                codProducto: $('#codProducto').val(),
                codPresentacion: $('#codPresentacion').val(),
                cantidad: "1"
            });
            ListarProductos();
        }

        function ListarProductos() {
            $.ajax({
                url: '@Url.Action("ListarProductosVenta")',
                type: 'POST',
                data: { lista: productos },
                success: function (response) {
                    $('#productos').html(response);
                },
                error: function (response) {
                    console.log(response);
                }
            });
        }

        function CrearDeudor() {
            if ($("#formDeudor").valid()) {
                $('#nuevoCliente').modal('hide');
                //enviar para crear deudor

                var deudor = {
                    nombre: $('#nombre').val(),
                    telefono: $('#telefono').val(),
                    residencia: $('#residencia').val(),
                    refUno: $('#refUno').val(),
                    refDos: $('#refDos').val()
                };
                console.log(deudor);

                $.ajax({
                    url: '@Url.Action("CrearDeudor", "Deudor")',
                    type: "POST",
                    data: { deudor: deudor },
                    success: function (codDeudor) {
                        Vender(codDeudor);
                    },
                    error: function (msg) {
                        console.log(msg);
                    }
                });

                $('#formDeudor').trigger("reset");
                $('#error').empty();
            }
        }

        function FiltrarClientes() {
            $.ajax({
                url: '@Url.Action("ListarClientes")',
                type: "POST",
                data: { filtro: $('#filtro').val() },
                success: function (response) {
                    $('#listaClientes').html(response);
                },
                error: function (msg) {
                    console.log(msg);
                }
            });
        }

        function ValidarNumero(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }

        function Contiene(codProd, codPres) {
            var encontrado = false;
            var i = 0;
            while (!encontrado && productos.length > i) {
                if (productos[i].codProducto == codProd && productos[i].codPresentacion == codPres) {
                    encontrado = true;
                }
                i++;
            }
            return encontrado;
        }

        function ResetearFormulario(accion) {
            $('#agrProducto').trigger("reset");
            $('#codPresentacion').empty();
        }
    </script>
}
